/**
 * ArbitroBot Mind Map Core Module
 * Handles: Initialization, Data Setup, Animation Loop, Transforms
 */

class MindMapCore {
    constructor() {
        this.svg = null;
        this.contentGroup = null;
        this.nodes = [];
        this.links = [];

        // Transform state
        this.currentScale = 1;
        this.targetScale = 1;
        this.currentX = 0;
        this.currentY = 0;
        this.targetX = 0;
        this.targetY = 0;

        // Animation state
        this.animationFrame = null;
        this.isAnimating = false;

        // Drag state
        this.isDragging = false;
        this.isPanning = false;
        this.draggedNode = null;
        this.dragStartX = 0;
        this.dragStartY = 0;

        // Viewport
        this.viewBoxWidth = 1400;
        this.viewBoxHeight = 900;

        // Throttle state
        this.lastWheelTime = 0;
        this.wheelThrottle = 16; // ~60fps

        // Touch/pinch state for mobile
        this.touches = [];
        this.lastPinchDistance = 0;
        this.isPinching = false;

        this.initialized = false;
    }

    /**
     * Smooth easing functions
     */
    easeOutCubic(t) {
        return 1 - Math.pow(1 - t, 3);
    }

    easeInOutQuad(t) {
        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;
    }

    easeOutQuart(t) {
        return 1 - Math.pow(1 - t, 4);
    }

    /**
     * Interpolate between current and target values
     */
    lerp(start, end, alpha) {
        return start + (end - start) * alpha;
    }

    /**
     * Initialize the mind map
     */
    init() {
        if (this.initialized) return;

        this.svg = document.getElementById('mindmapSvg');
        this.contentGroup = document.getElementById('mindmapContent');

        if (!this.svg || !this.contentGroup) {
            console.error('Mind map SVG elements not found');
            return;
        }

        this.setupData();

        // Delegate rendering to render module
        if (window.MindMapRender) {
            window.MindMapRender.render(this);
            window.MindMapRender.setupEventListeners(this);
        }

        this.centerView();
        this.startAnimationLoop();

        this.initialized = true;
    }

    /**
     * Main animation loop for smooth 60fps animations
     */
    startAnimationLoop() {
        const animate = () => {
            // Smooth interpolation towards target
            const alpha = 0.2;

            this.currentScale = this.lerp(this.currentScale, this.targetScale, alpha);
            this.currentX = this.lerp(this.currentX, this.targetX, alpha);
            this.currentY = this.lerp(this.currentY, this.targetY, alpha);

            // Apply SVG transform
            this.applyTransform();

            // Continue animation loop
            this.animationFrame = requestAnimationFrame(animate);
        };

        animate();
    }

    /**
     * Apply transform to content group using SVG transform
     */
    applyTransform() {
        const transform = `translate(${this.currentX}, ${this.currentY}) scale(${this.currentScale})`;
        this.contentGroup.setAttribute('transform', transform);
    }

    /**
     * Setup mind map data structure - ArbitroBot Journey
     * üéØ GRID LAYOUT: 5 –∫–æ–ª–æ–Ω–æ–∫ √ó 6 —Ä—è–¥–æ–≤
     * –ö–æ–ª–æ–Ω–∫–∏: x = 140, 420, 700, 980, 1260
     * –†—è–¥—ã: y = 75, 225, 375, 525, 675, 825
     */
    setupData() {
        this.nodes = [
            // ===== –ö–û–õ–û–ù–ö–ê 1: –í–•–û–î–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø (—Å–∏–Ω–∏–µ) x=140 =====
            {
                id: 'step1-plex',
                label: '–®–ê–ì 1: PLEX –•–æ–ª–¥–∏–Ω–≥',
                type: 'requirement',
                x: 140,
                y: 225, // —Ä—è–¥ 2
                svgIcon: '/assets/icons-arbitrage/safe.svg',
                description: '5,000-25,000+ PLEX\n–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É–º–º\n‚ö†Ô∏è –ü—Ä–æ–¥–∞–∂–∞ = –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞'
            },
            {
                id: 'step2-deposit',
                label: '–®–ê–ì 2: –î–µ–ø–æ–∑–∏—Ç',
                type: 'requirement',
                x: 140,
                y: 375, // —Ä—è–¥ 3
                svgIcon: '/assets/icons-arbitrage/coins.svg',
                description: '–û—Ç $100 –∏ –≤—ã—à–µ\n–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è $500-1,000\nüîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ = —Å–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞'
            },
            {
                id: 'step1-rabbits',
                label: '–®–ê–ì 1: –ö—Ä–æ–ª–∏–∫–∏',
                type: 'requirement',
                x: 140,
                y: 675, // —Ä—è–¥ 5
                svgIcon: '/assets/icons-arbitrage/rabbit.svg',
                description: '1-15+ –∂–∏–≤—ã—Ö –∫—Ä–æ–ª–∏–∫–æ–≤\n–¢–æ–∫–µ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ–µ—Ä–º–∞\nüí∞ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –∑–∞ 120 –¥–Ω–µ–π'
            },
            {
                id: 'step2-commission',
                label: '–®–ê–ì 2: –ö–æ–º–∏—Å—Å–∏—è',
                type: 'requirement',
                x: 140,
                y: 825, // —Ä—è–¥ 6
                svgIcon: '/assets/icons-arbitrage/clock-coin.svg',
                description: '10 PLEX –∑–∞ –∫–∞–∂–¥—ã–π $1\n–û–ø–ª–∞—Ç–∞ –ö–ê–ñ–î–´–ô –î–ï–ù–¨\nüìÖ –ë–µ–∑ –ø—Ä–æ–ø—É—Å–∫–æ–≤'
            },

            // ===== –ö–û–õ–û–ù–ö–ê 2: –í–†–ï–ú–ï–ù–ù–ê–Ø –®–ö–ê–õ–ê (–∑–µ–ª–µ–Ω—ã–µ) x=420 =====
            // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ –°–ù–ò–ó–£ –í–í–ï–†–•
            {
                id: 'step3-week1',
                label: '–®–ê–ì 3: –ù–µ–¥–µ–ª—è 1',
                type: 'timeline',
                x: 420,
                y: 825, // —Ä—è–¥ 6 (–≤–Ω–∏–∑—É)
                svgIcon: '/assets/icons-arbitrage/sprout.svg',
                description: '–ù–∞—á–∞–ª—å–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å\n–ê–¥–∞–ø—Ç–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã\n–ü–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã'
            },
            {
                id: 'step3-week2',
                label: '–ù–µ–¥–µ–ª—è 2',
                type: 'timeline',
                x: 420,
                y: 675, // —Ä—è–¥ 5
                svgIcon: '/assets/icons-arbitrage/young-tree.svg',
                description: '–†–æ—Å—Ç –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏\n–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤\n–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏'
            },
            {
                id: 'step3-week3',
                label: '–ù–µ–¥–µ–ª—è 3',
                type: 'timeline',
                x: 420,
                y: 525, // —Ä—è–¥ 4
                svgIcon: '/assets/icons-arbitrage/tree.svg',
                description: '–°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n–£—Å—Ç–æ–π—á–∏–≤—ã–π —Ä–æ—Å—Ç\n–†–µ–≥—É–ª—è—Ä–Ω–∞—è –ø—Ä–∏–±—ã–ª—å'
            },
            {
                id: 'step3-week4',
                label: '–ù–µ–¥–µ–ª—è 4',
                type: 'timeline',
                x: 420,
                y: 375, // —Ä—è–¥ 3
                svgIcon: '/assets/icons-arbitrage/fruit-tree.svg',
                description: '–ü–æ–ª–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å\n–í—ã—Å–æ–∫–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
            },
            {
                id: 'step3-week5',
                label: '–ù–µ–¥–µ–ª—è 5+',
                type: 'timeline',
                x: 420,
                y: 225, // —Ä—è–¥ 2
                svgIcon: '/assets/icons-arbitrage/money-tree.svg',
                description: '–ü–∏–∫–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å\n–î–æ 72.8% –≤ –¥–µ–Ω—å\n–°—Ç–∞–±–∏–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å'
            },
            {
                id: 'step3-month3',
                label: '–ú–µ—Å—è—Ü 3',
                type: 'timeline',
                x: 420,
                y: 75, // —Ä—è–¥ 1 (–≤–≤–µ—Ä—Ö—É)
                svgIcon: '/assets/icons-arbitrage/balance.svg',
                description: '–ë–ï–ó–£–ë–´–¢–û–ö\n–ü–æ–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –∑–∞—Ç—Ä–∞—Ç\n–ù–∞—á–∞–ª–æ —á–∏—Å—Ç–æ–π –ø—Ä–∏–±—ã–ª–∏'
            },

            // ===== –ö–û–õ–û–ù–ö–ê 3: –ñ–ï–õ–ï–ó–ù–´–ï –ü–†–ê–í–ò–õ–ê (–∫—Ä–∞—Å–Ω—ã–µ) x=700 =====
            {
                id: 'step4-rule1',
                label: '–®–ê–ì 4: –ù–µ –ø—Ä–æ–¥–∞–≤–∞—Ç—å',
                type: 'rule',
                x: 700,
                y: 225, // —Ä—è–¥ 2
                svgIcon: '/assets/icons-arbitrage/stop.svg',
                description: '–ó–ê–ü–†–ï–¢ –ø—Ä–æ–¥–∞–∂–∏ PLEX\n–ü—Ä–æ–¥–∞–ª = –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ù–ê–í–°–ï–ì–î–ê\n–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∑–∞–º–æ–∫'
            },
            {
                id: 'step4-rule2',
                label: '–ù–µ –º–µ–Ω—è—Ç—å –¥–µ–ø–æ–∑–∏—Ç',
                type: 'rule',
                x: 700,
                y: 525, // —Ä—è–¥ 4
                svgIcon: '/assets/icons-arbitrage/lock.svg',
                description: '–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞\n–ò–∑–º–µ–Ω–µ–Ω–∏–µ = —Å–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\n–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –≤–∞–∂–Ω–∞'
            },
            {
                id: 'step4-rule3',
                label: '–ü–ª–∞—Ç–∏—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
                type: 'rule',
                x: 700,
                y: 825, // —Ä—è–¥ 6
                svgIcon: '/assets/icons-arbitrage/calendar.svg',
                description: '–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è\n–ü—Ä–æ–ø—É—Å–∫ = –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞\n–ë–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö'
            },

            // ===== –ö–û–õ–û–ù–ö–ê 4: –†–ï–ó–£–õ–¨–¢–ê–¢–´ (–æ—Ä–∞–Ω–∂–µ–≤—ã–µ) x=980 =====
            {
                id: 'step5-profit',
                label: '–®–ê–ì 5: –ü—Ä–∏–±—ã–ª—å',
                type: 'result',
                x: 980,
                y: 225, // —Ä—è–¥ 2
                svgIcon: '/assets/icons-arbitrage/chart.svg',
                description: '–¢–æ—Ä–≥–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å\n–†–∞—Å—Ç–µ—Ç —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ\n–†–µ–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥'
            },
            {
                id: 'step5-growth',
                label: '–†–æ—Å—Ç –∞–∫—Ç–∏–≤–æ–≤',
                type: 'result',
                x: 980,
                y: 525, // —Ä—è–¥ 4
                svgIcon: '/assets/icons-arbitrage/rocket.svg',
                description: '–†–æ—Å—Ç —Ö–æ–ª–¥–∏–Ω–≥–∞ PLEX\n–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è\n–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞ —Ç–æ–∫–µ–Ω–∞'
            },
            {
                id: 'step5-total',
                label: '–ò–¢–û–ì–û',
                type: 'result',
                x: 980,
                y: 825, // —Ä—è–¥ 6
                svgIcon: '/assets/icons-arbitrage/trophy.svg',
                description: '–ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å –≤–æ–∑–º–æ–∂–Ω–∞\n–í—ã—Å–æ–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª ROI\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç —Ç–µ—Ä–ø–µ–Ω–∏—è –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã'
            },

            // ===== –ö–û–õ–û–ù–ö–ê 5: –ö–û–ù–ï–ß–ù–ê–Ø –¶–ï–õ–¨ (–≥–æ–ª—É–±–æ–π) x=1260 =====
            {
                id: 'core',
                label: 'ARBITRAGEBOT',
                type: 'core',
                x: 1260,
                y: 450, // —Ü–µ–Ω—Ç—Ä –º–µ–∂–¥—É —Ä—è–¥–∞–º–∏ 3 –∏ 4
                svgIcon: '/assets/icons-arbitrage/robot.svg',
                description: '–î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É\n–í—ã—Å–æ–∫–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å\n30-72.8% –≤ –¥–µ–Ω—å'
            },
        ];

        // Define connections between nodes
        // üîó –ü–û–¢–û–ö –°–õ–ï–í–ê –ù–ê–ü–†–ê–í–û: –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è ‚Üí –ù–µ–¥–µ–ª–∏ ‚Üí –ü—Ä–∞–≤–∏–ª–∞ ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç—ã ‚Üí ArbitrageBot
        this.links = [
            // ===== –ö–û–õ–û–ù–ö–ê 1 ‚Üí –ö–û–õ–û–ù–ö–ê 2 (–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è ‚Üí –í—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞) =====
            { source: 'step1-plex', target: 'step3-week5' },      // PLEX ‚Üí –ù–µ–¥–µ–ª—è 5+
            { source: 'step2-deposit', target: 'step3-week4' },   // –î–µ–ø–æ–∑–∏—Ç ‚Üí –ù–µ–¥–µ–ª—è 4
            { source: 'step1-rabbits', target: 'step3-week2' },   // –ö—Ä–æ–ª–∏–∫–∏ ‚Üí –ù–µ–¥–µ–ª—è 2
            { source: 'step2-commission', target: 'step3-week1' }, // –ö–æ–º–∏—Å—Å–∏—è ‚Üí –ù–µ–¥–µ–ª—è 1

            // ===== –ö–û–õ–û–ù–ö–ê 2: –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞ –Ω–µ–¥–µ–ª—å (–°–ù–ò–ó–£ –í–í–ï–†–•) =====
            { source: 'step3-week1', target: 'step3-week2' },
            { source: 'step3-week2', target: 'step3-week3' },
            { source: 'step3-week3', target: 'step3-week4' },
            { source: 'step3-week4', target: 'step3-week5' },
            { source: 'step3-week5', target: 'step3-month3' },

            // ===== –ö–û–õ–û–ù–ö–ê 2 ‚Üí –ö–û–õ–û–ù–ö–ê 3 (–ù–µ–¥–µ–ª–∏ ‚Üí –ü—Ä–∞–≤–∏–ª–∞) =====
            { source: 'step3-week5', target: 'step4-rule1' },     // –ù–µ–¥–µ–ª—è 5+ ‚Üí –ù–µ –ø—Ä–æ–¥–∞–≤–∞—Ç—å
            { source: 'step3-week3', target: 'step4-rule2' },     // –ù–µ–¥–µ–ª—è 3 ‚Üí –ù–µ –º–µ–Ω—è—Ç—å –¥–µ–ø–æ–∑–∏—Ç
            { source: 'step3-week1', target: 'step4-rule3' },     // –ù–µ–¥–µ–ª—è 1 ‚Üí –ü–ª–∞—Ç–∏—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å

            // ===== –ö–û–õ–û–ù–ö–ê 3 ‚Üí –ö–û–õ–û–ù–ö–ê 4 (–ü—Ä–∞–≤–∏–ª–∞ ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç—ã) =====
            { source: 'step4-rule1', target: 'step5-profit' },    // –ù–µ –ø—Ä–æ–¥–∞–≤–∞—Ç—å ‚Üí –ü—Ä–∏–±—ã–ª—å
            { source: 'step4-rule2', target: 'step5-growth' },    // –ù–µ –º–µ–Ω—è—Ç—å ‚Üí –†–æ—Å—Ç –∞–∫—Ç–∏–≤–æ–≤
            { source: 'step4-rule3', target: 'step5-total' },     // –ü–ª–∞—Ç–∏—Ç—å ‚Üí –ò–¢–û–ì–û

            // ===== –ö–û–õ–û–ù–ö–ê 4: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–≤—è–∑–∞–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π =====
            { source: 'step5-profit', target: 'step5-growth' },
            { source: 'step5-growth', target: 'step5-total' },

            // ===== –í—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞ ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç—ã (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤—è–∑–∏) =====
            { source: 'step3-month3', target: 'step5-profit' },   // –ë–µ–∑—É–±—ã—Ç–æ–∫ ‚Üí –ü—Ä–∏–±—ã–ª—å
            { source: 'step3-month3', target: 'step5-growth' },   // –ë–µ–∑—É–±—ã—Ç–æ–∫ ‚Üí –†–æ—Å—Ç

            // ===== –ö–û–õ–û–ù–ö–ê 4 ‚Üí –ö–û–õ–û–ù–ö–ê 5 (–†–µ–∑—É–ª—å—Ç–∞—Ç—ã ‚Üí ArbitrageBot) =====
            { source: 'step5-profit', target: 'core' },
            { source: 'step5-growth', target: 'core' },
            { source: 'step5-total', target: 'core' },

            // ===== –ì–õ–ê–í–ù–ê–Ø –°–í–Ø–ó–¨: –ú–µ—Å—è—Ü 3 ‚Üí ArbitrageBot =====
            { source: 'step3-month3', target: 'core' },
        ];
    }

    /**
     * Smooth zoom with target interpolation
     */
    smoothZoom(factor) {
        this.targetScale = Math.max(0.3, Math.min(3, this.targetScale * factor));
    }

    /**
     * Reset view
     */
    reset() {
        this.targetScale = 1;
        this.targetX = 0;
        this.targetY = 0;
    }

    /**
     * Center view on the core node
     */
    centerView() {
        const coreNode = this.nodes.find(n => n.id === 'core');
        if (!coreNode) return;

        const svgRect = this.svg.getBoundingClientRect();
        this.targetX = svgRect.width / 2 - coreNode.x;
        this.targetY = svgRect.height / 2 - coreNode.y;
        this.targetScale = 1;
    }

    /**
     * Cleanup
     */
    destroy() {
        if (this.animationFrame) {
            cancelAnimationFrame(this.animationFrame);
        }
        this.initialized = false;
    }
}

// Export to window for global access
if (typeof window !== 'undefined') {
    window.MindMapCore = MindMapCore;
}
