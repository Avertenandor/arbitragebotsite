/**
 * ArbitroBot Mind Map Core Module
 * Handles: Initialization, Data Setup, Animation Loop, Transforms
 */

class MindMapCore {
    constructor() {
        this.svg = null;
        this.contentGroup = null;
        this.nodes = [];
        this.links = [];

        // Transform state
        this.currentScale = 1;
        this.targetScale = 1;
        this.currentX = 0;
        this.currentY = 0;
        this.targetX = 0;
        this.targetY = 0;

        // Animation state
        this.animationFrame = null;
        this.isAnimating = false;

        // Drag state
        this.isDragging = false;
        this.isPanning = false;
        this.draggedNode = null;
        this.dragStartX = 0;
        this.dragStartY = 0;

        // Viewport
        this.viewBoxWidth = 1400;
        this.viewBoxHeight = 900;

        // Throttle state
        this.lastWheelTime = 0;
        this.wheelThrottle = 16; // ~60fps

        // Touch/pinch state for mobile
        this.touches = [];
        this.lastPinchDistance = 0;
        this.isPinching = false;

        this.initialized = false;
    }

    /**
     * Smooth easing functions
     */
    easeOutCubic(t) {
        return 1 - Math.pow(1 - t, 3);
    }

    easeInOutQuad(t) {
        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;
    }

    easeOutQuart(t) {
        return 1 - Math.pow(1 - t, 4);
    }

    /**
     * Interpolate between current and target values
     */
    lerp(start, end, alpha) {
        return start + (end - start) * alpha;
    }

    /**
     * Initialize the mind map
     */
    init() {
        if (this.initialized) return;

        this.svg = document.getElementById('mindmapSvg');
        this.contentGroup = document.getElementById('mindmapContent');

        if (!this.svg || !this.contentGroup) {
            console.error('Mind map SVG elements not found');
            return;
        }

        this.setupData();

        // Delegate rendering to render module
        if (window.MindMapRender) {
            window.MindMapRender.render(this);
            window.MindMapRender.setupEventListeners(this);
        }

        this.centerView();
        this.startAnimationLoop();

        this.initialized = true;
    }

    /**
     * Main animation loop for smooth 60fps animations
     */
    startAnimationLoop() {
        const animate = () => {
            // Smooth interpolation towards target
            const alpha = 0.2;

            this.currentScale = this.lerp(this.currentScale, this.targetScale, alpha);
            this.currentX = this.lerp(this.currentX, this.targetX, alpha);
            this.currentY = this.lerp(this.currentY, this.targetY, alpha);

            // Apply SVG transform
            this.applyTransform();

            // Continue animation loop
            this.animationFrame = requestAnimationFrame(animate);
        };

        animate();
    }

    /**
     * Apply transform to content group using SVG transform
     */
    applyTransform() {
        const transform = `translate(${this.currentX}, ${this.currentY}) scale(${this.currentScale})`;
        this.contentGroup.setAttribute('transform', transform);
    }

    /**
     * Setup mind map data structure - ArbitroBot User Journey to Profit
     */
    setupData() {
        // Define all nodes in the mind map
        this.nodes = [
            // ===== –¶–ï–ù–¢–†–ê–õ–¨–ù–´–ô –£–ó–ï–õ =====
            {
                id: 'core',
                label: 'ARBITRAGEBOT',
                type: 'core',
                x: 700,
                y: 450,
                svgIcon: '/assets/icons-arbitrage/robot.svg',
                description: '30-72.8% –¥–æ—Ö–æ–¥ –≤ –¥–µ–Ω—å\n–í—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç'
            },

            // ===== –£–†–û–í–ï–ù–¨ 1: –í–•–û–î–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø =====
            {
                id: 'plex-holding',
                label: 'PLEX –•–æ–ª–¥–∏–Ω–≥',
                type: 'requirement',
                x: 350,
                y: 280,
                svgIcon: '/assets/icons-arbitrage/safe.svg',
                description: '5,000-25,000+ PLEX\n–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É–º–º\n‚ö†Ô∏è –ü—Ä–æ–¥–∞–∂–∞ = –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞'
            },
            {
                id: 'nft-rabbits',
                label: '–ö—Ä–æ–ª–∏–∫–∏ DEXRabbit',
                type: 'requirement',
                x: 1050,
                y: 280,
                svgIcon: '/assets/icons-arbitrage/rabbit.svg',
                description: '1-15+ –∫—Ä–æ–ª–∏–∫–æ–≤ NFT\n–í—Ç–æ—Ä–æ–π —Ñ–∞–∫—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\nüí∞ –ë–æ–Ω—É—Å: –¥–æ—Ö–æ–¥ 500-1300% –∑–∞ 120 –¥–Ω–µ–π'
            },
            {
                id: 'deposit',
                label: '–î–µ–ø–æ–∑–∏—Ç USDT',
                type: 'requirement',
                x: 350,
                y: 620,
                svgIcon: '/assets/icons-arbitrage/coins.svg',
                description: '–û—Ç $100 –¥–æ $10,000+\n–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è $500-1,000\nüîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ = —Å–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞'
            },
            {
                id: 'commission',
                label: '–ö–æ–º–∏—Å—Å–∏—è 10 PLEX/$1',
                type: 'requirement',
                x: 1050,
                y: 620,
                svgIcon: '/assets/icons-arbitrage/clock-coin.svg',
                description: '–û–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –ö–ê–ñ–î–´–ô –î–ï–ù–¨\nüìÖ –ë–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤\n–ù–µ—É–ø–ª–∞—Ç–∞ = –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞'
            },

            // ===== –£–†–û–í–ï–ù–¨ 2: –í–†–ï–ú–ï–ù–ù–ê–Ø –®–ö–ê–õ–ê =====
            {
                id: 'week1',
                label: '–ù–µ–¥–µ–ª—è 1',
                type: 'timeline',
                x: 1150,
                y: 200,
                svgIcon: '/assets/icons-arbitrage/sprout.svg',
                description: '0.5% –≤ –¥–µ–Ω—å\n$5/–¥–µ–Ω—å –ø—Ä–∏ $1,000\n–ê–¥–∞–ø—Ç–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã'
            },
            {
                id: 'week2',
                label: '–ù–µ–¥–µ–ª—è 2',
                type: 'timeline',
                x: 1150,
                y: 280,
                svgIcon: '/assets/icons-arbitrage/young-tree.svg',
                description: '2% –≤ –¥–µ–Ω—å\n$20/–¥–µ–Ω—å –ø—Ä–∏ $1,000\n–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤'
            },
            {
                id: 'week3',
                label: '–ù–µ–¥–µ–ª—è 3',
                type: 'timeline',
                x: 1150,
                y: 360,
                svgIcon: '/assets/icons-arbitrage/tree.svg',
                description: '4% –≤ –¥–µ–Ω—å\n$40/–¥–µ–Ω—å –ø—Ä–∏ $1,000\n–°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞'
            },
            {
                id: 'week4',
                label: '–ù–µ–¥–µ–ª—è 4',
                type: 'timeline',
                x: 1150,
                y: 440,
                svgIcon: '/assets/icons-arbitrage/fruit-tree.svg',
                description: '12% –≤ –¥–µ–Ω—å\n$120/–¥–µ–Ω—å –ø—Ä–∏ $1,000\n–ü–æ–ª–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å'
            },
            {
                id: 'week5',
                label: '–ù–µ–¥–µ–ª—è 5+',
                type: 'timeline',
                x: 1150,
                y: 520,
                svgIcon: '/assets/icons-arbitrage/money-tree.svg',
                description: '–î–æ 72.8% –≤ –¥–µ–Ω—å\n–î–æ $728/–¥–µ–Ω—å –ø—Ä–∏ $1,000\n–ü–∏–∫ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏'
            },
            {
                id: 'month3',
                label: '–ú–µ—Å—è—Ü 3',
                type: 'timeline',
                x: 1150,
                y: 600,
                svgIcon: '/assets/icons-arbitrage/balance.svg',
                description: '–ë–ï–ó–£–ë–´–¢–û–ö\n–ü–æ–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –∑–∞—Ç—Ä–∞—Ç\n–ù–∞—á–∞–ª–æ —á–∏—Å—Ç–æ–π –ø—Ä–∏–±—ã–ª–∏'
            },

            // ===== –£–†–û–í–ï–ù–¨ 3: –ñ–ï–õ–ï–ó–ù–´–ï –ü–†–ê–í–ò–õ–ê =====
            {
                id: 'rule1',
                label: '–ó–ê–ü–†–ï–¢ –ø—Ä–æ–¥–∞–∂–∏',
                type: 'rule',
                x: 250,
                y: 350,
                svgIcon: '/assets/icons-arbitrage/stop.svg',
                description: '–ü—Ä–æ–¥–∞–ª 1 PLEX –∏–∑ —Ö–æ–ª–¥–∏–Ω–≥–∞?\n‚Üí –ë–æ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ù–ê–í–°–ï–ì–î–ê\n–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∑–∞–º–æ–∫ –ø—Ä–æ—Ç–∏–≤ –ø—Ä–æ–¥–∞–∂'
            },
            {
                id: 'rule2',
                label: '–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç',
                type: 'rule',
                x: 250,
                y: 450,
                svgIcon: '/assets/icons-arbitrage/lock.svg',
                description: '–ò–∑–º–µ–Ω–∏–ª —Ä–∞–∑–º–µ—Ä —Å—É–º–º—ã?\n‚Üí –ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ–¥–µ–ª—å —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è\n–ú–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å—É–º–º—ã'
            },
            {
                id: 'rule3',
                label: '–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –æ–ø–ª–∞—Ç–∞',
                type: 'rule',
                x: 250,
                y: 550,
                svgIcon: '/assets/icons-arbitrage/calendar.svg',
                description: '–ü—Ä–æ–ø—É—Å—Ç–∏–ª –æ–ø–ª–∞—Ç—É –∫–æ–º–∏—Å—Å–∏–∏?\n‚Üí –ë–æ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è\n‚Üí –ü–æ—Ç–µ—Ä—è –≤—Ä–µ–º–µ–Ω–∏ –≤ –≥—Ä–∞–¥–∞—Ü–∏–∏'
            },

            // ===== –£–†–û–í–ï–ù–¨ 4: –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ =====
            {
                id: 'result-bot',
                label: '–ü—Ä–∏–±—ã–ª—å –æ—Ç –±–æ—Ç–∞',
                type: 'result',
                x: 450,
                y: 750,
                svgIcon: '/assets/icons-arbitrage/chart.svg',
                description: '~$360,000 –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤\n–ü—Ä–∏ –¥–µ–ø–æ–∑–∏—Ç–µ $1,000\n–†–µ–∞–ª—å–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å'
            },
            {
                id: 'result-plex',
                label: '–†–æ—Å—Ç —Ö–æ–ª–¥–∏–Ω–≥–∞ PLEX',
                type: 'result',
                x: 700,
                y: 750,
                svgIcon: '/assets/icons-arbitrage/rocket.svg',
                description: '15,000 PLEX √ó $50 = $750,000\n–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π —Ä–æ—Å—Ç —Ç–æ–∫–µ–Ω–∞\n–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è'
            },
            {
                id: 'result-total',
                label: '–ò–¢–û–ì–û',
                type: 'result',
                x: 950,
                y: 750,
                svgIcon: '/assets/icons-arbitrage/trophy.svg',
                description: '$1,100,000+ –≤–æ–∑–º–æ–∂–Ω–æ\nROI: 110,150%\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç —Ç–µ—Ä–ø–µ–Ω–∏—è –ø–µ—Ä–≤—ã–µ 2.5 –º–µ—Å—è—Ü–∞'
            },
        ];

        // Define connections between nodes
        this.links = [
            // –¶–µ–Ω—Ç—Ä ‚Üí –í—Ö–æ–¥–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
            { source: 'core', target: 'plex-holding' },
            { source: 'core', target: 'nft-rabbits' },
            { source: 'core', target: 'deposit' },
            { source: 'core', target: 'commission' },

            // –¶–µ–Ω—Ç—Ä ‚Üí –í—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞ (–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è)
            { source: 'core', target: 'week1' },
            { source: 'week1', target: 'week2' },
            { source: 'week2', target: 'week3' },
            { source: 'week3', target: 'week4' },
            { source: 'week4', target: 'week5' },
            { source: 'week5', target: 'month3' },

            // –¶–µ–Ω—Ç—Ä ‚Üí –ñ–µ–ª–µ–∑–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞
            { source: 'core', target: 'rule1' },
            { source: 'core', target: 'rule2' },
            { source: 'core', target: 'rule3' },

            // –ü—Ä–∞–≤–∏–ª–∞ —Å–≤—è–∑–∞–Ω—ã —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏
            { source: 'rule1', target: 'plex-holding' },
            { source: 'rule2', target: 'deposit' },
            { source: 'rule3', target: 'commission' },

            // –í—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞ ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
            { source: 'month3', target: 'result-bot' },
            { source: 'month3', target: 'result-plex' },
            { source: 'result-bot', target: 'result-total' },
            { source: 'result-plex', target: 'result-total' },

            // –í—Ö–æ–¥–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤–ª–∏—è—é—Ç –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            { source: 'plex-holding', target: 'result-plex' },
            { source: 'deposit', target: 'result-bot' },
        ];
    }

    /**
     * Smooth zoom with target interpolation
     */
    smoothZoom(factor) {
        this.targetScale = Math.max(0.3, Math.min(3, this.targetScale * factor));
    }

    /**
     * Reset view
     */
    reset() {
        this.targetScale = 1;
        this.targetX = 0;
        this.targetY = 0;
    }

    /**
     * Center view on the core node
     */
    centerView() {
        const coreNode = this.nodes.find(n => n.id === 'core');
        if (!coreNode) return;

        const svgRect = this.svg.getBoundingClientRect();
        this.targetX = svgRect.width / 2 - coreNode.x;
        this.targetY = svgRect.height / 2 - coreNode.y;
        this.targetScale = 1;
    }

    /**
     * Cleanup
     */
    destroy() {
        if (this.animationFrame) {
            cancelAnimationFrame(this.animationFrame);
        }
        this.initialized = false;
    }
}

// Export to window for global access
if (typeof window !== 'undefined') {
    window.MindMapCore = MindMapCore;
}
