'use client';

import { useState, useEffect, useRef } from 'react';
import { motion } from 'framer-motion';

interface WalletBalances {
  bnb: number;
  usdt: number;
  busd: number;
  others: number;
}

interface Transaction {
  timestamp: string;
  type: string;
  amount: string;
  token: string;
  txHash: string;
}

export default function WalletTab() {
  const [isConnected, setIsConnected] = useState(false);
  const [walletAddress, setWalletAddress] = useState('');
  const [balances, setBalances] = useState<WalletBalances>({
    bnb: 0,
    usdt: 0,
    busd: 0,
    others: 0,
  });
  const [transactions] = useState<Transaction[]>([]);
  const updateIntervalRef = useRef<NodeJS.Timeout | null>(null);

  // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤ –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    if (isConnected) {
      updateBalances();
      updateIntervalRef.current = setInterval(() => {
        updateBalances();
      }, 15000);
    } else {
      if (updateIntervalRef.current) {
        clearInterval(updateIntervalRef.current);
        updateIntervalRef.current = null;
      }
    }

    return () => {
      if (updateIntervalRef.current) {
        clearInterval(updateIntervalRef.current);
      }
    };
  }, [isConnected]);

  // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤ (–º–æ–∫–æ–≤–∞—è)
  const updateBalances = () => {
    if (!isConnected) return;

    // –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –±–ª–æ–∫—á–µ–π–Ω—É
    setBalances({
      bnb: Math.random() * 5,
      usdt: Math.random() * 1000,
      busd: Math.random() * 500,
      others: 0,
    });
  };

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
  const handleConnect = () => {
    const privateKey = prompt('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á (64 —Å–∏–º–≤–æ–ª–∞):');

    if (!privateKey) return;

    if (privateKey.length !== 64) {
      alert('–û—à–∏–±–∫–∞: –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 64 —Å–∏–º–≤–æ–ª–∞');
      return;
    }

    // –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–π –∞–¥—Ä–µ—Å
    const mockAddress = '0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb';

    setWalletAddress(mockAddress);
    setIsConnected(true);
    updateBalances();

    alert(`–ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω!\n–ê–¥—Ä–µ—Å: ${mockAddress}`);
  };

  // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
  const handleDisconnect = () => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫?')) return;

    setIsConnected(false);
    setWalletAddress('');
    setBalances({
      bnb: 0,
      usdt: 0,
      busd: 0,
      others: 0,
    });

    if (updateIntervalRef.current) {
      clearInterval(updateIntervalRef.current);
      updateIntervalRef.current = null;
    }
  };

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞
  const handleCopyAddress = () => {
    if (!walletAddress) return;

    navigator.clipboard.writeText(walletAddress);
    alert('–ê–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
  };

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –≤ BSCScan
  const handleOpenBSCScan = () => {
    if (!walletAddress) return;

    window.open(`https://bscscan.com/address/${walletAddress}`, '_blank');
  };

  return (
    <div className="space-y-4">
      {/* –ë–õ–û–ö 1: –ó–ê–ì–û–õ–û–í–û–ö –° –ò–ù–î–ò–ö–ê–¢–û–†–û–ú –°–¢–ê–¢–£–°–ê */}
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        className="glass rounded-xl p-4 flex flex-wrap items-center gap-4"
      >
        <h2 className="text-xl font-bold text-gradient flex-shrink-0">
          üíº –ö–æ—à–µ–ª–µ–∫
        </h2>
        <div className="flex items-center gap-2 ml-auto">
          <div
            className={`flex items-center gap-2 px-3 py-1.5 rounded-lg text-sm font-semibold ${
              isConnected
                ? 'bg-[var(--success)]/20 text-[var(--success)]'
                : 'bg-[var(--danger)]/20 text-[var(--danger)]'
            }`}
          >
            <span className="text-lg">{isConnected ? 'üü¢' : 'üî¥'}</span>
            <span>{isConnected ? '–ü–û–î–ö–õ–Æ–ß–ï–ù' : '–ù–ï –ü–û–î–ö–õ–Æ–ß–ï–ù'}</span>
          </div>
        </div>
      </motion.div>

      {/* –ë–õ–û–ö 2: –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.1 }}
        className="glass rounded-xl p-6"
      >
        <p className="text-[var(--text-secondary)] text-sm mb-4">
          –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ —á–µ—Ä–µ–∑ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã
        </p>
        <div className="flex flex-wrap gap-3">
          <button
            onClick={handleConnect}
            disabled={isConnected}
            className={`flex items-center gap-2 px-6 py-3 rounded-xl font-bold text-base transition-all shadow-lg ${
              isConnected
                ? 'bg-[var(--bg-tertiary)] text-[var(--text-disabled)] cursor-not-allowed opacity-50'
                : 'bg-gradient-to-r from-[var(--success)] to-[var(--success)]/80 text-white hover:opacity-90 hover:shadow-glow-accent'
            }`}
          >
            üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫
          </button>
          <button
            onClick={handleDisconnect}
            disabled={!isConnected}
            className={`flex items-center gap-2 px-6 py-3 rounded-xl font-bold text-base transition-all shadow-lg ${
              !isConnected
                ? 'bg-[var(--bg-tertiary)] text-[var(--text-disabled)] cursor-not-allowed opacity-50'
                : 'bg-gradient-to-r from-[var(--danger)] to-[var(--danger)]/80 text-white hover:opacity-90 hover:shadow-glow-accent'
            }`}
          >
            ‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å
          </button>
        </div>
      </motion.div>

      {/* –ë–õ–û–ö 3: –ê–î–†–ï–° –ö–û–®–ï–õ–¨–ö–ê */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.2 }}
        className="glass rounded-xl p-6"
      >
        <div className="flex flex-col lg:flex-row items-start lg:items-center gap-4">
          <div className="flex-1 min-w-0">
            <p className="text-xs text-[var(--text-muted)] mb-2 uppercase tracking-wider">
              –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞
            </p>
            <p
              className="font-mono text-[var(--primary)] text-base break-all select-all"
              title={walletAddress || '‚Äî'}
            >
              {isConnected ? walletAddress : '‚Äî'}
            </p>
          </div>
          <div className="flex gap-2">
            <button
              onClick={handleOpenBSCScan}
              disabled={!isConnected}
              className={`flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium transition-all ${
                !isConnected
                  ? 'bg-[var(--bg-tertiary)] text-[var(--text-disabled)] cursor-not-allowed opacity-50'
                  : 'bg-[var(--info)]/20 text-[var(--info)] hover:bg-[var(--info)]/30'
              }`}
            >
              üîç BSCScan
            </button>
            <button
              onClick={handleCopyAddress}
              disabled={!isConnected}
              className={`flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium transition-all ${
                !isConnected
                  ? 'bg-[var(--bg-tertiary)] text-[var(--text-disabled)] cursor-not-allowed opacity-50'
                  : 'bg-[var(--primary)]/20 text-[var(--primary)] hover:bg-[var(--primary)]/30'
              }`}
            >
              üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
            </button>
          </div>
        </div>
      </motion.div>

      {/* –ë–õ–û–ö 4: –ë–ê–õ–ê–ù–°–´ */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.3 }}
        className="glass rounded-xl p-6"
      >
        <h3 className="text-lg font-bold mb-6 flex items-center gap-2">
          üí∞ –ë–∞–ª–∞–Ω—Å—ã
        </h3>

        {/* –°–µ—Ç–∫–∞ –±–∞–ª–∞–Ω—Å–æ–≤ 2x2 */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
          {/* BNB */}
          <div className="bg-[var(--bg-tertiary)] rounded-lg p-4 border border-[var(--border-color)] hover:border-[var(--border-color-hover)] transition-all">
            <p className="text-xs text-[var(--text-muted)] mb-1 uppercase tracking-wider">
              BNB:
            </p>
            <p className="text-3xl font-bold text-[var(--success)]">
              {balances.bnb.toFixed(4)}
            </p>
          </div>

          {/* USDT */}
          <div className="bg-[var(--bg-tertiary)] rounded-lg p-4 border border-[var(--border-color)] hover:border-[var(--border-color-hover)] transition-all">
            <p className="text-xs text-[var(--text-muted)] mb-1 uppercase tracking-wider">
              USDT:
            </p>
            <p className="text-3xl font-bold text-[var(--success)]">
              {balances.usdt.toFixed(4)}
            </p>
          </div>

          {/* BUSD */}
          <div className="bg-[var(--bg-tertiary)] rounded-lg p-4 border border-[var(--border-color)] hover:border-[var(--border-color-hover)] transition-all">
            <p className="text-xs text-[var(--text-muted)] mb-1 uppercase tracking-wider">
              BUSD:
            </p>
            <p className="text-3xl font-bold text-[var(--success)]">
              {balances.busd.toFixed(4)}
            </p>
          </div>

          {/* –î—Ä—É–≥–∏–µ */}
          <div className="bg-[var(--bg-tertiary)] rounded-lg p-4 border border-[var(--border-color)] hover:border-[var(--border-color-hover)] transition-all">
            <p className="text-xs text-[var(--text-muted)] mb-1 uppercase tracking-wider">
              –î—Ä—É–≥–∏–µ:
            </p>
            <p className="text-2xl font-bold text-[var(--text-tertiary)]">
              {balances.others} —Ç–æ–∫–µ–Ω–æ–≤
            </p>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
        <button
          onClick={updateBalances}
          disabled={!isConnected}
          className={`w-full flex items-center justify-center gap-2 px-6 py-3 rounded-xl font-bold text-base transition-all shadow-lg ${
            !isConnected
              ? 'bg-[var(--bg-tertiary)] text-[var(--text-disabled)] cursor-not-allowed opacity-50'
              : 'bg-gradient-to-r from-[var(--info)] to-[var(--info)]/80 text-white hover:opacity-90 hover:shadow-glow-primary'
          }`}
        >
          üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å—ã
        </button>

        {isConnected && (
          <p className="text-xs text-[var(--text-tertiary)] text-center mt-3">
            ‚ö° –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
          </p>
        )}
      </motion.div>

      {/* –ë–õ–û–ö 5: –ü–û–°–õ–ï–î–ù–ò–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.4 }}
        className="glass rounded-xl overflow-hidden"
      >
        <div className="bg-[var(--bg-tertiary)] px-6 py-4 border-b border-[var(--border-color)]">
          <h3 className="text-lg font-bold flex items-center gap-2">
            üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
          </h3>
        </div>

        <div className="overflow-x-auto">
          <table className="w-full">
            <thead className="bg-[var(--bg-secondary)]">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-bold text-[var(--text-secondary)] uppercase tracking-wider border-b border-[var(--border-color)]">
                  –í—Ä–µ–º—è
                </th>
                <th className="px-6 py-3 text-left text-xs font-bold text-[var(--text-secondary)] uppercase tracking-wider border-b border-[var(--border-color)]">
                  –¢–∏–ø
                </th>
                <th className="px-6 py-3 text-left text-xs font-bold text-[var(--text-secondary)] uppercase tracking-wider border-b border-[var(--border-color)]">
                  –°—É–º–º–∞
                </th>
                <th className="px-6 py-3 text-left text-xs font-bold text-[var(--text-secondary)] uppercase tracking-wider border-b border-[var(--border-color)]">
                  –¢–æ–∫–µ–Ω
                </th>
                <th className="px-6 py-3 text-left text-xs font-bold text-[var(--text-secondary)] uppercase tracking-wider border-b border-[var(--border-color)]">
                  TX Hash
                </th>
              </tr>
            </thead>
            <tbody>
              {transactions.length === 0 ? (
                <tr>
                  <td colSpan={5} className="px-6 py-12 text-center">
                    <div className="flex flex-col items-center gap-3">
                      <span className="text-4xl opacity-30">üì≠</span>
                      <p className="text-[var(--text-tertiary)] text-sm">
                        –ù–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
                      </p>
                      <p className="text-[var(--text-muted)] text-xs">
                        –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
                      </p>
                    </div>
                  </td>
                </tr>
              ) : (
                transactions.map((tx, index) => (
                  <tr
                    key={index}
                    className="border-b border-[var(--border-color)] hover:bg-[var(--bg-tertiary)] transition-colors"
                  >
                    <td className="px-6 py-4 text-sm text-[var(--text-primary)]">
                      {tx.timestamp}
                    </td>
                    <td className="px-6 py-4 text-sm text-[var(--text-primary)]">
                      {tx.type}
                    </td>
                    <td className="px-6 py-4 text-sm text-[var(--text-primary)]">
                      {tx.amount}
                    </td>
                    <td className="px-6 py-4 text-sm text-[var(--text-primary)]">
                      {tx.token}
                    </td>
                    <td className="px-6 py-4 text-sm">
                      <a
                        href={`https://bscscan.com/tx/${tx.txHash}`}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="text-[var(--primary)] hover:text-[var(--primary-hover)] font-mono text-xs"
                      >
                        {tx.txHash.substring(0, 8)}...
                        {tx.txHash.substring(tx.txHash.length - 6)}
                      </a>
                    </td>
                  </tr>
                ))
              )}
            </tbody>
          </table>
        </div>
      </motion.div>
    </div>
  );
}
