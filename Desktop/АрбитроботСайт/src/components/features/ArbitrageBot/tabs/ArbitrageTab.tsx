'use client';

import { useState } from 'react';
import { motion } from 'framer-motion';

interface ArbitrageSettings {
  minProfitPercent: number;
  maxGasGwei: number;
  slippagePercent: number;
  priorityDEX: 'V2' | 'V3' | 'Auto';
  enableV2: boolean;
  enableV3: boolean;
  dailyLimitUSD: number;
  maxPerTradeUSD: number;
}

export default function ArbitrageTab() {
  const [settings, setSettings] = useState<ArbitrageSettings>({
    minProfitPercent: 0.5,
    maxGasGwei: 5,
    slippagePercent: 1,
    priorityDEX: 'Auto',
    enableV2: true,
    enableV3: true,
    dailyLimitUSD: 10000,
    maxPerTradeUSD: 500,
  });

  const [isModified, setIsModified] = useState(false);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const handleChange = (key: keyof ArbitrageSettings, value: any) => {
    setSettings(prev => ({ ...prev, [key]: value }));
    setIsModified(true);
  };

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const handleApply = () => {
    alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!');
    setIsModified(false);
  };

  // –°–±—Ä–æ—Å –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const handleReset = () => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏?')) return;

    setSettings({
      minProfitPercent: 0.5,
      maxGasGwei: 5,
      slippagePercent: 1,
      priorityDEX: 'Auto',
      enableV2: true,
      enableV3: true,
      dailyLimitUSD: 10000,
      maxPerTradeUSD: 500,
    });
    setIsModified(false);
    alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!');
  };

  return (
    <div className="space-y-4">
      {/* –ë–õ–û–ö 1: –ó–ê–ì–û–õ–û–í–û–ö */}
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        className="glass rounded-xl p-4 flex flex-wrap items-center gap-4"
      >
        <h2 className="text-xl font-bold text-gradient flex-shrink-0">
          ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞
        </h2>
        {isModified && (
          <div className="flex items-center gap-2 px-3 py-1.5 rounded-lg text-sm font-semibold bg-[var(--warning)]/20 text-[var(--warning)]">
            <span className="text-lg">‚ö†Ô∏è</span>
            <span>–ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è</span>
          </div>
        )}
      </motion.div>

      {/* –ë–õ–û–ö 2: –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.1 }}
        className="glass rounded-xl p-6"
      >
        <h3 className="text-lg font-bold mb-6 flex items-center gap-2">
          üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        </h3>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {/* Min Profit % */}
          <div>
            <label className="block text-sm font-semibold text-[var(--text-secondary)] mb-2">
              Min Profit %
            </label>
            <input
              type="number"
              step="0.1"
              min="0"
              value={settings.minProfitPercent}
              onChange={(e) => handleChange('minProfitPercent', parseFloat(e.target.value))}
              className="w-full px-4 py-3 bg-[var(--bg-tertiary)] border border-[var(--border-color)] rounded-lg text-[var(--text-primary)] focus:outline-none focus:border-[var(--primary)] transition-colors"
            />
            <p className="text-xs text-[var(--text-muted)] mt-1">
              –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏
            </p>
          </div>

          {/* Max Gas Gwei */}
          <div>
            <label className="block text-sm font-semibold text-[var(--text-secondary)] mb-2">
              Max Gas Gwei
            </label>
            <input
              type="number"
              step="1"
              min="1"
              value={settings.maxGasGwei}
              onChange={(e) => handleChange('maxGasGwei', parseInt(e.target.value))}
              className="w-full px-4 py-3 bg-[var(--bg-tertiary)] border border-[var(--border-color)] rounded-lg text-[var(--text-primary)] focus:outline-none focus:border-[var(--primary)] transition-colors"
            />
            <p className="text-xs text-[var(--text-muted)] mt-1">
              –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –≥–∞–∑–∞
            </p>
          </div>

          {/* Slippage % */}
          <div>
            <label className="block text-sm font-semibold text-[var(--text-secondary)] mb-2">
              Slippage %
            </label>
            <input
              type="number"
              step="0.1"
              min="0.1"
              max="10"
              value={settings.slippagePercent}
              onChange={(e) => handleChange('slippagePercent', parseFloat(e.target.value))}
              className="w-full px-4 py-3 bg-[var(--bg-tertiary)] border border-[var(--border-color)] rounded-lg text-[var(--text-primary)] focus:outline-none focus:border-[var(--primary)] transition-colors"
            />
            <p className="text-xs text-[var(--text-muted)] mt-1">
              –î–æ–ø—É—Å—Ç–∏–º–æ–µ –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
            </p>
          </div>
        </div>
      </motion.div>

      {/* –ë–õ–û–ö 3: DEX –ù–ê–°–¢–†–û–ô–ö–ò */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.2 }}
        className="glass rounded-xl p-6"
      >
        <h3 className="text-lg font-bold mb-6 flex items-center gap-2">
          üîÑ DEX Settings
        </h3>

        <div className="space-y-6">
          {/* Priority DEX */}
          <div>
            <label className="block text-sm font-semibold text-[var(--text-secondary)] mb-2">
              Priority DEX
            </label>
            <div className="grid grid-cols-3 gap-3">
              {(['V2', 'V3', 'Auto'] as const).map((option) => (
                <button
                  key={option}
                  onClick={() => handleChange('priorityDEX', option)}
                  className={`px-4 py-3 rounded-lg font-bold text-sm transition-all ${
                    settings.priorityDEX === option
                      ? 'bg-gradient-to-r from-[var(--primary)] to-[var(--primary)]/80 text-white shadow-lg'
                      : 'bg-[var(--bg-tertiary)] text-[var(--text-secondary)] hover:bg-[var(--bg-tertiary)]/80 border border-[var(--border-color)]'
                  }`}
                >
                  {option}
                </button>
              ))}
            </div>
          </div>

          {/* Enable V2/V3 */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <label className="flex items-center gap-3 p-4 bg-[var(--bg-tertiary)] rounded-lg border border-[var(--border-color)] cursor-pointer hover:border-[var(--border-color-hover)] transition-colors">
              <input
                type="checkbox"
                checked={settings.enableV2}
                onChange={(e) => handleChange('enableV2', e.target.checked)}
                className="w-5 h-5 rounded border-2 border-[var(--border-color)] text-[var(--primary)] focus:ring-2 focus:ring-[var(--primary)]"
              />
              <div>
                <p className="text-sm font-semibold text-[var(--text-primary)]">
                  Enable V2 DEXs
                </p>
                <p className="text-xs text-[var(--text-muted)]">
                  PancakeSwap V2, BiSwap, ApeSwap
                </p>
              </div>
            </label>

            <label className="flex items-center gap-3 p-4 bg-[var(--bg-tertiary)] rounded-lg border border-[var(--border-color)] cursor-pointer hover:border-[var(--border-color-hover)] transition-colors">
              <input
                type="checkbox"
                checked={settings.enableV3}
                onChange={(e) => handleChange('enableV3', e.target.checked)}
                className="w-5 h-5 rounded border-2 border-[var(--border-color)] text-[var(--primary)] focus:ring-2 focus:ring-[var(--primary)]"
              />
              <div>
                <p className="text-sm font-semibold text-[var(--text-primary)]">
                  Enable V3 DEXs
                </p>
                <p className="text-xs text-[var(--text-muted)]">
                  PancakeSwap V3, Uniswap V3
                </p>
              </div>
            </label>
          </div>
        </div>
      </motion.div>

      {/* –ë–õ–û–ö 4: –õ–ò–ú–ò–¢–´ */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.3 }}
        className="glass rounded-xl p-6"
      >
        <h3 className="text-lg font-bold mb-6 flex items-center gap-2">
          üíµ –õ–∏–º–∏—Ç—ã
        </h3>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {/* Daily Limit */}
          <div>
            <label className="block text-sm font-semibold text-[var(--text-secondary)] mb-2">
              Daily Limit USD
            </label>
            <input
              type="number"
              step="100"
              min="0"
              value={settings.dailyLimitUSD}
              onChange={(e) => handleChange('dailyLimitUSD', parseInt(e.target.value))}
              className="w-full px-4 py-3 bg-[var(--bg-tertiary)] border border-[var(--border-color)] rounded-lg text-[var(--text-primary)] focus:outline-none focus:border-[var(--primary)] transition-colors"
            />
            <p className="text-xs text-[var(--text-muted)] mt-1">
              –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤–ª–∏ –≤ –¥–µ–Ω—å
            </p>
          </div>

          {/* Max Per Trade */}
          <div>
            <label className="block text-sm font-semibold text-[var(--text-secondary)] mb-2">
              Max Per Trade USD
            </label>
            <input
              type="number"
              step="50"
              min="0"
              value={settings.maxPerTradeUSD}
              onChange={(e) => handleChange('maxPerTradeUSD', parseInt(e.target.value))}
              className="w-full px-4 py-3 bg-[var(--bg-tertiary)] border border-[var(--border-color)] rounded-lg text-[var(--text-primary)] focus:outline-none focus:border-[var(--primary)] transition-colors"
            />
            <p className="text-xs text-[var(--text-muted)] mt-1">
              –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–¥–Ω–æ–π —Å–¥–µ–ª–∫–∏
            </p>
          </div>
        </div>
      </motion.div>

      {/* –ë–õ–û–ö 5: –ö–ù–û–ü–ö–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.4 }}
        className="glass rounded-xl p-6"
      >
        <div className="flex flex-wrap gap-4">
          <button
            onClick={handleApply}
            disabled={!isModified}
            className={`flex items-center gap-2 px-8 py-4 rounded-xl font-bold text-base transition-all shadow-lg ${
              !isModified
                ? 'bg-[var(--bg-tertiary)] text-[var(--text-disabled)] cursor-not-allowed opacity-50'
                : 'bg-gradient-to-r from-[var(--success)] to-[var(--success)]/80 text-white hover:opacity-90 hover:shadow-glow-accent'
            }`}
          >
            ‚úÖ Apply Settings
          </button>

          <button
            onClick={handleReset}
            className="flex items-center gap-2 px-8 py-4 rounded-xl bg-gradient-to-r from-[var(--danger)] to-[var(--danger)]/80 text-white font-bold text-base transition-all hover:opacity-90 shadow-lg hover:shadow-glow-accent"
          >
            üîÑ Reset to Defaults
          </button>
        </div>
      </motion.div>

      {/* –ë–õ–û–ö 6: –ò–ù–§–û–†–ú–ê–¶–ò–Ø */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.5 }}
        className="glass rounded-xl p-6"
      >
        <div className="flex items-start gap-3">
          <span className="text-2xl">‚ÑπÔ∏è</span>
          <div>
            <h4 className="text-sm font-bold text-[var(--text-primary)] mb-2">
              –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
            </h4>
            <ul className="text-xs text-[var(--text-secondary)] space-y-1">
              <li>‚Ä¢ Min Profit: 0.5-1% - –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è BSC</li>
              <li>‚Ä¢ Max Gas: 5-10 Gwei - –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω</li>
              <li>‚Ä¢ Slippage: 1-2% - –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Å–∫–æ—Ä–æ—Å—Ç—å—é –∏ —Ç–æ—á–Ω–æ—Å—Ç—å—é</li>
              <li>‚Ä¢ Auto DEX - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –ª—É—á—à–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞</li>
            </ul>
          </div>
        </div>
      </motion.div>
    </div>
  );
}
